@DSL DefaultGenericBehaviour;
@Behaviour MiehePhaseFieldDamage;
@Author Jérémy Bleyer;
@Date 07 / 04 / 2020;

@Gradient real d;
d.setGlossaryName("Damage");
@Flux real Y;
Y.setEntryName("EnergyRelease");

@Gradient TVector g;
g.setEntryName("DamageGradient");
@Flux TVector q;
q.setEntryName("DualDamageGradient");

@TangentOperatorBlocks{∂Y∕∂Δd, ∂q∕∂Δg};

@MaterialProperty real l₀;
l₀.setEntryName("RegularizationLength");
@MaterialProperty real Gc;
Gc.setEntryName("FractureEnergy");

@ExternalStateVariable real H;
H.setEntryName("HistoryFunction");

@Integrator {
  const auto H_tdt = H + dH;
  q = Gc * l₀ * (g + Δg);
  Y = (Gc / l₀ + 2 * H_tdt) ⋅ (d + Δd) - 2 * H_tdt;
}

@TangentOperator {
  static_cast<void>(smt);
  const auto H_tdt = H + dH;
  ∂q∕∂Δg = Gc * l₀ * tmatrix<N, N, real>::Id();
  ∂Y∕∂Δd = Gc / l₀ + 2 * H_tdt;
}

@DissipatedEnergy {
  Psi_d = Gc / 2 / l₀ * (d * d + l₀ * l₀ * (g | g));
}